/* La pseudoclase :root {] representa al elemento html y, 
    por ejemplo, nos permite declarar variable en css.
    Una variable se declara dentro de la pseudoclase :root 
    de la siguiente manera --nombre-de-la-variable: valor
    y se referencia como un valor con la función var(--nombre-de-la-variable);
    en distintas propiedades.*/

    :root{
        --bg-color:#181419; 
        --primary-color:#9f3647;
        --secondary-color: #ffc098;
        --third-color: #db4649;
        --third-bis-color: #db4648f2;
        --bg-input-color: #4f31572c;    
    }

* { /* Selector universal */
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family:'Nunito', 'Sans-serif', 'System-UI';
} 

body{
    background-color: var(--bg-color);
}

a { /*Para sacar el subrayado de los enlaces: */
    text-decoration: none;

}

h2 { /*Selector por etiqueta*/
     color:#FFF;
     font-size: 2vw; /* 2% del ancho de la ventana gráfica. */
}

.header{
    background-color: var(--third-color);
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 9999; 
}

nav{
    display: flex;
    /* flex-direction: column; */
    /* La división de columnas va a depender de la cantidad de hijos que tenga el contenedor.
    Con flex-direction: column o por defecto (row); puedo cambiar el comportamiento de los elementos o ítems,
    la propiedad flex-direction establece cuál es el eje principal y secundario en cuestión. */

    /* Alinear con respecto al eje principal: */
    /* justify-content: center; start; end; space-between; space-around; space-evenly; */
    justify-content: space-between;
    height: 80px;

    /* Alinear con respecto al eje secundario */
    align-items: center; /*start; end; strech; */
    padding: 0px 50px;
}

/*Selector por clase*/
.nav-links{
    /*Para que la lista de enlaces no tenga puntitos ni cuadrados.*/
    list-style: none;
    display: flex;
} 

/* Selectores descendentes */
.nav-links a{
    color: #FFF;
    font-weight: bold;
}

.btn-cac{
    background-color: var(--primary-color);
    padding: 10px;
    color:#FFF;
    border-radius: 10px;
    /* Para que el botón tenga el símbolo del dedito al seleccionarlo: */
    cursor: pointer;
}

.btn-cac:hover{
    color: var(--secondary-color);
    border: 2px solid var(--secondary-color);
}

/*Selector por id*/
#logo {
    /* Para que el tamaño de la fuente sea más grande: */
    font-weight: bold; 
} 

#logo a{
    color:#FFF;
}

#logo:hover{
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */
    animation: tilt-n-move-shaking 0.5s infinite;
}

@keyframes tilt-n-move-shaking {
    0% {transform: translate(0,0) rotate(0deg);}
    25%{transform: translate(2px,2px) rotate(2deg);}
    50%{transform: translate(0,0) rotate(0deg);}
    75%{transform: translate(-2px,2px) rotate(-2deg);}
    100%{transform: translate(0,0) rotate(0deg);}

}

#banner{
    background-image: url('../img/banner-bg.jpg');
    background-size: cover; /* para cubrir el espacio del elemento. */
    background-position: center;
    height: 600px; /*60vh - 60% del alto de la ventana gráfica. */
    box-shadow:inset 0 0 0 2000px rgba(84, 84, 84, 0.5)
}

.container{
    max-width: 1200px;
    margin: 120px auto;
    /* max-height: 800; */

    /* Relleno o espaciado: */
    /* padding: 50px 20px; */
   
    /* Márgenes: */
    /* margin: 20px; */

   /* Bordes: */
   /* border: 10px solid saddlebrown; */
   /* border-width: 5px 10px; t/b l/r*/
   /* border-width: 5px 10px 15px; t l/r b*/
   /* border-width: 5px 10px 15px 20 px;
   border-style: solid;
   border-color: saddlebrown */  
}

.banner-card{
    margin: 0 auto;
    text-align: center;
    padding: 0px 160px;
}

.banner-card h1{
    color:#FFF;
    font-size: 4vw;
}

/* Selector de hijos directos */
.banner-card > h2{
    margin-bottom: 20px;
} 

/* Selector para hermanos adyacentes */
/* h1 + h2{
} */

/* Selector para hermanos en general */
/* h1 ~ h2{
} */

.search-title{
    color: white;
    font-size: 3vw;
}

.input-search{
    background-color: var(--bg-input-color);
    border: 2px solid white;
    border-radius: 25px;
    color: white;
    font-size: 16px;
    height: 50px;
    margin: 20px 0px;
    outline: none;
    padding: 0px 20px;
    width: 70%;
}

.movie-item{
    border-radius: 20px;
    width: 200px;
    font-size: 20px;
    cursor: pointer;
}

.movie-item-img{
    width: 200px;
    height: 300px;
    object-fit: cover;
}

.movie-item-v2{
    border-radius: 20px;
    width: 170px;
    min-width:170px;
    font-size: 20px;
    cursor: pointer;
    margin-left: 30px;
}

.movie-item-img-v2{
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* #popular-list{
    height: 1000px;
    position: relative;
}

#movie-1{
    width: 100px;
    height: 350px;
    position: relative;
    top: 50px;
    left: 500px
}

#movie-2{
    width: 100px;
    height: 350px;
    position: absolute;
    top: 50px;
    right: 500px
} 

/* #search{
    position: sticky;
    top:0;
    z-index: 9999;
}*/

/* Selector agrupado */
#popular, #top-rated{
    text-align: center;
} 

/* Pseudoclases

Las pseudoclases se trabajan para alterar elementos que están
en una posición o un estado específico, como en el ejemplo.
Y podemos llegar a detectar ciertos eventos y cambiar comportamientos 
a partir del estilado de elementos.*/

#footer a:first-child{
    color: #FFF;
}

#footer a:last-child{
    color:red;
}

#footer a:nth-child(2){
    color:green;
}

/* Pseudoelementos

Los pseudoelementos se añaden a los selectores y permiten añadirle
estilos a una parte concreta de un elemento. Por ejemplo, a la primer
letra de un párrafo, a la primer línea de un texto, etc.*/

.movie-item-detail-subtitle::after{
    content: "🌟"
}



/* Transformaciones */

/* #movie-1{

    /* transform: rotate(20deg); */
    /* transform: scale(0.5); */
    /* transform: translate(40px,80px);*/
    /* transform: rotate(20deg) scale(1.2) translate(20px, 50px) skew(40deg); */
    /* Ver cómo usar las funciones en 3D */

/* Transiciones */

/* Nos permiten cambiar los valores de una propiedad,
transitar de un estado inicial a un estado final a partir de determinadas propiedades. */

/* #movie-2{
    /* background-color: red;
    transition: all 5.5s linear 1s; */
    /* La propiedad transition se puede desglosar y trabajar por partes para afectar propiedades en particular */

/* Animaciones */

/* Lo que diferencia las animaciones de las transiciones es que en las animaciones podemos crear fotogramas o estados 
de los elementos a través de reglas (keyframes). */

/* #logo{}*/